import express, { Application, NextFunction, Request, Response } from "express";

const app: Application = express();
const PORT: number = 3000;
const porteiroMiddleware = (req: Request, res: Response, next: NextFunction) => {
  
    // Exibe no console o caminho da URL acessada na requisi√ß√£o
    console.log(`üì¢ Requisi√ß√£o recebida em: ${req.url}`);
  
    // Chama a fun√ß√£o "next" para permitir que a requisi√ß√£o continue para o pr√≥ximo middleware ou rota
    next();
  };

  app.use(porteiroMiddleware);
app.use(express.json());

app.listen(PORT, () => {
    console.log(`üöÄ Servidor rodando em http://localhost:${PORT}`);
})

app.get('/saudacao',(req:Request, res:Response):Response => {
    return res.send("Ol√°, jovem programador")
})

// Middleware que trata requisi√ß√µes que n√£o bateram em nenhuma rota definida
app.use((req: Request, res: Response): Response => {
  
    // Retorna uma resposta com status HTTP 404 (N√£o Encontrado)
    // E envia um JSON com a mensagem personalizada
    return res.status(404).json({ mensagem: 'Rota n√£o encontrada!' });
  });